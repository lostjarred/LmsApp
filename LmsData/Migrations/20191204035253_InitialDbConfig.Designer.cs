// <auto-generated />
using System;
using LmsData.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LmsData.Migrations
{
    [DbContext(typeof(LmsContext))]
    [Migration("20191204035253_InitialDbConfig")]
    partial class InitialDbConfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LmsData.Models.ActivityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Port")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("LmsData.Models.ComputerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaseType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("HddSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RamInMegabytes")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Computers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Lenovo",
                            CaseType = 2,
                            DateReceived = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HddSize = "500Gb",
                            Model = "",
                            OperatingSystem = "Windows 10 Pro",
                            Processor = "Pentium Core2 Duo",
                            RamInMegabytes = 4096,
                            SerialNumber = "LEN-123",
                            TestDate = new DateTime(2019, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TestedBy = "Riley"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Lenovo",
                            CaseType = 2,
                            DateReceived = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HddSize = "250Gb",
                            Model = "",
                            OperatingSystem = "Windows 10 Pro",
                            Processor = "Pentium Core2 Duo",
                            RamInMegabytes = 4096,
                            SerialNumber = "LEN-3452",
                            TestDate = new DateTime(2019, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TestedBy = "Riley"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Dell",
                            CaseType = 0,
                            DateReceived = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HddSize = "500Gb",
                            Model = "Optiplex 610",
                            OperatingSystem = "Ubuntu 19.04 Desktop",
                            Processor = "Pentium Core i3 Gen 4",
                            RamInMegabytes = 4096,
                            SerialNumber = "LEN-3452",
                            TestDate = new DateTime(2019, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TestedBy = "Jarred"
                        });
                });

            modelBuilder.Entity("LmsData.Models.ExpectationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberModelId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberModelId");

                    b.ToTable("Expectations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Brodie is Bob's Grandson",
                            MemberId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Brodie is enrolled in both sessions",
                            MemberId = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tyreece Parent Expectation 1",
                            MemberId = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Dex likes coding and Minecraft",
                            MemberId = 3,
                            Type = 2
                        });
                });

            modelBuilder.Entity("LmsData.Models.IncidentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccuranceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReportedById")
                        .HasColumnType("int");

                    b.Property<int?>("SessionModelId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportedById");

                    b.HasIndex("SessionModelId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("LmsData.Models.IssueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberModelId");

                    b.ToTable("KnownIssues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Brodie does not like a lot of noise",
                            MemberId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dex is a bit shy",
                            MemberId = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Has OCD",
                            MemberId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Has ADHD",
                            MemberId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Very talkative",
                            MemberId = 4
                        });
                });

            modelBuilder.Entity("LmsData.Models.MemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookedSession")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnrolled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCadet")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncidentModelId");

                    b.HasIndex("SessionModelId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedSession = 3,
                            DateEnrolled = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2006, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Brodie",
                            IsActive = true,
                            IsCadet = false,
                            LastName = "O'Hara"
                        },
                        new
                        {
                            Id = 2,
                            BookedSession = 1,
                            DateEnrolled = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Tyreece",
                            IsActive = true,
                            IsCadet = false,
                            LastName = "Dureaux"
                        },
                        new
                        {
                            Id = 3,
                            BookedSession = 1,
                            DateEnrolled = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2010, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dexter",
                            IsActive = true,
                            IsCadet = false,
                            LastName = "McMahon"
                        },
                        new
                        {
                            Id = 4,
                            BookedSession = 1,
                            DateEnrolled = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2009, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sonnie",
                            IsActive = true,
                            IsCadet = false,
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 5,
                            BookedSession = 2,
                            DateEnrolled = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2007, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lilly",
                            IsActive = true,
                            IsCadet = false,
                            LastName = "Fletcher"
                        });
                });

            modelBuilder.Entity("LmsData.Models.MentorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanWorkWithChildren")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("WWCCVerifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Mentors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanWorkWithChildren = true,
                            Email = "steve@thelab.grafton.internal",
                            FirstName = "Steve",
                            LastName = "Teece",
                            Mobile = "(0421) 420-141",
                            Speciality = "Programming",
                            Status = 1,
                            WWCCVerifiedDate = new DateTime(2019, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CanWorkWithChildren = true,
                            Email = "duncan@thelab.grafton.internal",
                            FirstName = "Duncan",
                            LastName = "Sage",
                            Mobile = "",
                            Speciality = "3D Graphics",
                            Status = 1,
                            WWCCVerifiedDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CanWorkWithChildren = true,
                            Email = "jarred@thelab.grafton.internal",
                            FirstName = "Jarred",
                            LastName = "Chaffey",
                            Mobile = "",
                            Speciality = "Hardware",
                            Status = 2,
                            WWCCVerifiedDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CanWorkWithChildren = true,
                            Email = "mark@thelab.grafton.internal",
                            FirstName = "Mark",
                            LastName = "Bathgate",
                            Mobile = "",
                            Speciality = "",
                            Status = 3,
                            WWCCVerifiedDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CanWorkWithChildren = true,
                            Email = "ben@thelab.grafton.internal",
                            FirstName = "Ben",
                            LastName = "McKenzie",
                            Mobile = "",
                            Speciality = "Gaming",
                            Status = 2,
                            WWCCVerifiedDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LmsData.Models.SessionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("LmsData.Models.ExpectationModel", b =>
                {
                    b.HasOne("LmsData.Models.MemberModel", null)
                        .WithMany("Expectations")
                        .HasForeignKey("MemberModelId");
                });

            modelBuilder.Entity("LmsData.Models.IncidentModel", b =>
                {
                    b.HasOne("LmsData.Models.MentorModel", "ReportedBy")
                        .WithMany()
                        .HasForeignKey("ReportedById");

                    b.HasOne("LmsData.Models.SessionModel", null)
                        .WithMany("Incidents")
                        .HasForeignKey("SessionModelId");
                });

            modelBuilder.Entity("LmsData.Models.IssueModel", b =>
                {
                    b.HasOne("LmsData.Models.MemberModel", null)
                        .WithMany("KnownIssues")
                        .HasForeignKey("MemberModelId");
                });

            modelBuilder.Entity("LmsData.Models.MemberModel", b =>
                {
                    b.HasOne("LmsData.Models.IncidentModel", null)
                        .WithMany("MembersInvolved")
                        .HasForeignKey("IncidentModelId");

                    b.HasOne("LmsData.Models.SessionModel", null)
                        .WithMany("Attendees")
                        .HasForeignKey("SessionModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
